class MainClass {
    Void main() {
        Math m;
        m = new Math();

        println("Answer of Fib(11): ");
        println(m.fib(11));
        println("\n");

        println("Answer of 100*100: ");
        println(m.times(100, 100));
        println("\n");

        println("Loopy answer for x=400, z=True: ");
        println(m.loopy(400, true));
        println("\n");

        println("Loopy answer for x=400, z=False: ");
        println(m.loopy(400, false));
        println("\n");
    }
}

class Math {
    Int fib(Int x) {
        if (x == 0 || x == 1) {
            return x;
        } else {
            return fib(x-1) + fib(x-2);
        }
    }

    Int times(Int x, Int y) {
        Node ll;
        Int z;
        Int sum;

        ll = new Node();
        ll.setVal(-9999);
        
        z = 0;
        while (z < y) {
            ll = ll.push(x);
            z = z + 1;
        }

        sum = 0;
        while (z > 0) {
            sum = sum + ll.val;
            ll = ll.next;
            z = z - 1;
        }

        return sum;
    }

    Int loopy(Int x, Bool z) {
        Int limit;
        Int c;

        limit = 20;

        println("New loopy with x=");
        println(x);
        println(" z=");
        if (z) {
            println("true");
        } else {
            println("false");
        }
        println("\n");

        if (z) {
            if (x < 100) {
                c = 0;
                while (x < 200 && c < limit) {
                    x = x + 1;
                    c = c + 1;
                }
                return loopy(x, z);
            } 
            else {
                if (x == 200) {
                    return 200;
                }
                else {
                    c = 0;
                    while (x > 200 && c < limit) {
                        x = x - 1;
                        c = c + 1;
                    }
                    return loopy(x, z);
                }
            }
        } else {
            return ---x;
        }
    }
}

class Node {
    Node next;
    Int val;

    Void setVal(Int x) {
        this.val = x;
    }

    
    Node push(Int x) {
        Node nd;
        nd = new Node();
        nd.setVal(x);
        nd.next = this;
        return nd;
    }
}